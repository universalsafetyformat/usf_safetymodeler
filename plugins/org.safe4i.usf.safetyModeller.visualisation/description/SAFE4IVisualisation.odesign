<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" documentation="This eclipse plugin provides a Sirius design definition for USF Models which are based on the USF Meta Model. At the moment it supports two diagram types: Type Diagrams, Block Diagrams, and Safety Measure Diagrams." name="USFDescription" version="12.0.0.2017041100">
  <ownedViewpoints documentation="This eclipse plugin provides a Sirius design definition for USF Models which are based on the USF Meta Model. At the moment it supports two diagram types: Type Diagrams, Block Diagrams, and Safety Measure Diagrams." endUserDocumentation="This eclipse plugin provides a Sirius design definition for USF Models which are based on the USF Meta Model. At the moment it supports two diagram types: Type Diagrams, Block Diagrams, and Safety Measure Diagrams." name="USF" icon="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/shield.png">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Type Diagram" domainClass="common::Model" enablePopupBars="true">
      <metamodel href="https://www.universalsafetyformat.org/block#/"/>
      <metamodel href="https://www.universalsafetyformat.org/common#/"/>
      <metamodel href="https://www.universalsafetyformat.org/controlFlow#/"/>
      <metamodel href="https://www.universalsafetyformat.org/errorHandling#/"/>
      <metamodel href="https://www.universalsafetyformat.org/portTemplate#/"/>
      <metamodel href="https://www.universalsafetyformat.org/parameter#/"/>
      <metamodel href="https://www.universalsafetyformat.org/safetyPattern#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.box" label="Box Layout" description="Algorithm for packing of unconnected boxes, i.e. graphs without edges."/>
      <defaultLayer name="Default">
        <containerMappings name="EnumerationType" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Type%20Elements']" domainClass="common::EnumerationType" childrenPresentation="List">
          <subNodeMappings name="EnumerationLiteral" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='EnumerationLiteral']" semanticCandidatesExpression="feature:literals" domainClass="common::EnumerationLiteral">
            <style xsi:type="style:SquareDescription" labelSize="10" labelExpression="aql: self.value + ' - ' + self.literal" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/bullet_black.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
          </style>
        </containerMappings>
        <containerMappings name="StructType" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Type%20Elements']" domainClass="common::StructType" childrenPresentation="List">
          <subNodeMappings name="StructMember" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='StructMember']" semanticCandidatesExpression="feature:members" domainClass="common::StructMember">
            <style xsi:type="style:SquareDescription" labelSize="10" labelExpression="aql:self.name + ':' + self.type.name" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/bullet_black.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <containerMappings name="PrimitiveType" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Type%20Elements']" domainClass="common::PrimitiveType">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="ArrayType" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Type%20Elements']" domainClass="common::ArrayType" childrenPresentation="List">
          <subNodeMappings name="ArrayType_length" semanticCandidatesExpression="var:self" domainClass="common::ArrayType">
            <style xsi:type="style:SquareDescription" labelSize="10" showIcon="false" labelExpression="aql:'length: ' + self.length" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_chocolate']"/>
          </style>
        </containerMappings>
        <containerMappings name="TemplateType" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Type%20Elements']" domainClass="portTemplate::TemplateType" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql: '&lt;' + self.name + '>'" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/tag.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
          </style>
        </containerMappings>
        <containerMappings name="Stereotype" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Stereotype']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Stereotype']" domainClass="parameter::Stereotype" childrenPresentation="List">
          <subNodeMappings name="Node" semanticCandidatesExpression="feature:parameters" domainClass="parameter::ParameterDefinition">
            <style xsi:type="style:SquareDescription" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/tag.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
        </containerMappings>
        <containerMappings name="ParameterDefinition" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='ParameterDefinition']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='ParameterDefinition']" domainClass="parameter::ParameterDefinition" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(parameter::ArrayParameterDefinition)">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='chocolate']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(parameter::PrimitiveParameterDefinition)">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(parameter::EnumerationParameterDefinition)">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <toolSections name="DomainTypes">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Primitive Type" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='PrimitiveType']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="common::PrimitiveType" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'NewPrimitiveType ' + self.eContainer().eContents(common::PrimitiveType)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Array Type" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='ArrayType']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="common::ArrayType" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'NewArrayType ' + self.eContainer().eContents(common::ArrayType)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Enumeration Type" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='EnumerationType']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="common::EnumerationType" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'EnumerationType ' + self.eContainer().eContents(common::EnumerationType)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Struct Type" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='StructType']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/text_replace.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="common::StructType" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'NewStructType ' + self.eContainer().eContents(common::StructType)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Template Type" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='TemplateType']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/tag.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="portTemplate::TemplateType" referenceName="content"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Enumeration Literal" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='EnumerationType']/@subNodeMappings[name='EnumerationLiteral']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/bullet_black.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="common::EnumerationLiteral" referenceName="literals">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="literal" valueExpression="aql:('literal' +(container.literals->size() -1)).toUpper() "/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql: container.literals->size()-1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Struct Member" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='StructType']/@subNodeMappings[name='StructMember']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/bullet_black.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="common::StructMember" referenceName="members">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:('member' +(container.members->size() -1))"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Stereotypes">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Stereotype" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='Stereotype']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/tag.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::Stereotype" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Stereotype ' + self.eContainer().eContents(parameter::Stereotype)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Parameters">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Array Parameter" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='ParameterDefinition']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::ArrayParameterDefinition" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ArrayParameterDefinition ' + self.eContainer().eContents(parameter::ArrayParameterDefinition)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Primitive Parameter" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='ParameterDefinition']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::PrimitiveParameterDefinition" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'PrimitiveParameterDefinition ' + self.eContainer().eContents(parameter::PrimitiveParameterDefinition)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Enumeration Parameter" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Type%20Diagram']/@defaultLayer/@containerMappings[name='ParameterDefinition']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::EnumerationParameterDefinition" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'EnumerationParameterDefinition ' + self.eContainer().eContents(parameter::EnumerationParameterDefinition)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Direct Edit">
          <ownedTools xsi:type="tool:DirectEditLabel" name="Type Elements">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EnumerationLiteral">
            <mask mask="{0}-{1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="var:arg0">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="literal" valueExpression="var:arg1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="StructMember" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Stereotype" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ParameterDefinition" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='BlockType%20from%20treeview'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SafetyMeasure%20from%20treeview'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='ErrorHandler%20from%20treeview']" endUserDocumentation="Block Diagrams are used to visualize the data and control flow of a system.&#xD;&#xA;&#xD;&#xA;It shows Block Types and Blocks as well as their Ports and Connections. Also, Safety Measures can be created and assigned to model elements." name="Block Diagram" domainClass="common::Model" enablePopupBars="true">
      <metamodel href="https://www.universalsafetyformat.org/block#/"/>
      <metamodel href="https://www.universalsafetyformat.org/common#/"/>
      <metamodel href="https://www.universalsafetyformat.org/controlFlow#/"/>
      <metamodel href="https://www.universalsafetyformat.org/portTemplate#/"/>
      <metamodel href="https://www.universalsafetyformat.org/errorHandling#/"/>
      <metamodel href="https://www.universalsafetyformat.org/parameter#/"/>
      <metamodel href="https://www.universalsafetyformat.org/safetyPattern#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.direction">
          <targets>PARENT</targets>
          <value name="RIGHT"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="SPLINES"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>PARENT</targets>
          <targets>NODE</targets>
          <value name="SEPARATE_CHILDREN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumSetLayoutOption" id="org.eclipse.elk.nodeLabels.placement">
          <targets>NODE</targets>
          <targets>LABEL</targets>
          <values name="H_CENTER"/>
          <values name="V_TOP"/>
          <values name="INSIDE"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumSetLayoutOption" id="org.eclipse.elk.nodeSize.options">
          <targets>NODE</targets>
          <values name="ASYMMETRICAL"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumSetLayoutOption" id="org.eclipse.elk.portLabels.placement">
          <targets>NODE</targets>
          <values name="OUTSIDE"/>
          <values name="ALWAYS_SAME_SIDE"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.labelPort" value="5.0">
          <targets>PARENT</targets>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <nodeMappings name="SafetyPatternApplication" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='SafetyMeasure']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Safety%20Measure']" createElements="false" domainClass="safetyPattern::SafetyPatternApplication">
          <borderedNodeMappings name="Safety Pattern BlockParameterDefinition" semanticCandidatesExpression="aql:self.type.blockParameters" domainClass="parameter::BlockParameterDefinition">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name" labelAlignment="RIGHT" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="Safety Pattern PortParameterDefinition" semanticCandidatesExpression="aql:self.type.portParameters" domainClass="parameter::PortParameterDefinition">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name" labelAlignment="RIGHT" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/bullet_picture.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="Safety Pattern BlockTypeParameterDefinition" semanticCandidatesExpression="aql:self.type.blockTypeParameters" domainClass="parameter::BlockTypeParameterDefinition">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name" labelAlignment="RIGHT" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="Safety Pattern ConnectionParameterDefinition" semanticCandidatesExpression="aql:self.type.connectionParameters" domainClass="parameter::ConnectionParameterDefinition">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name" labelAlignment="RIGHT" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="Safety Pattern DomainTypeValue" semanticCandidatesExpression="aql:self.domainTypeArguments" domainClass="parameter::DomainTypeParameterValue">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.parameter.name + ' = ' + self.value.name" labelAlignment="RIGHT" sizeComputationExpression="2" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
            <conditionnalStyles predicateExpression="aql: self.value == null">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.parameter.name + ' = ' + self.parameter.defaultValue.name" labelAlignment="RIGHT" sizeComputationExpression="2" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="Safety Pattern TransformationTypeValue" semanticCandidatesExpression="aql:self.trafoTypeArguments" domainClass="parameter::TransformationTypeValue">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.parameter.type + ' ' + self.parameter.name + ' = ' + self.value" labelAlignment="RIGHT" sizeComputationExpression="2" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
            <conditionnalStyles predicateExpression="aql: self.value.size() = 0">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.parameter.type + ' ' + self.parameter.name + ' = ' + self.parameter.defaultValue" labelAlignment="RIGHT" sizeComputationExpression="2" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name" sizeComputationExpression="16" resizeKind="NSEW" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/safeIcon.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="DelegateDataFlowConnection" preconditionExpression="service:isValidDelegateDataFlowConnectionLinkEdge(sourceView, targetView)" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorDataPort']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorDataPort']" targetFinderExpression="feature:destinationPort" sourceFinderExpression="feature:sourcePort" domainClass="block::DelegateDataFlowConnection" useDomainElement="true">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="service:getStereotypeNames()">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="AssemblyDataFlowConnection" preconditionExpression="service:isValidAssemblyDataFlowConnectionLinkEdge(sourceView, targetView)" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Block']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Block']" targetFinderExpression="feature:destinationPort" sourceFinderExpression="feature:sourcePort" domainClass="block::AssemblyDataFlowConnection" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="service:getStereotypeNames()">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="AssemblyControlFlowConnection" preconditionExpression="aql:self.isValidAssemblyControlFlowConnectionLinkEdge(sourceView, targetView)" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Controlflow%20Connection']" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorControlFlowPort%20on%20Container%20Block']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorControlFlowPort%20on%20Container%20Block']" targetFinderExpression="aql:Sequence{self.destinationBlock, self.destinationPort}" sourceFinderExpression="aql:Sequence{self.sourceBlock, self.sourcePort}" domainClass="controlFlow::AssemblyControlFlowConnection" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="service:getStereotypeNames()">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="DelegateControlFlowConnection" preconditionExpression="service:isValidDelegateControlFlowConnectionLinkEdge(sourceView, targetView)" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Controlflow%20Connection']" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorControlFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorControlFlowPort']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorControlFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorControlFlowPort%20on%20Container%20Block']" targetFinderExpression="service:getTargetCandidates" sourceFinderExpression="service:getSourceCandidates" domainClass="controlFlow::DelegateControlFlowConnection" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="service:getStereotypeNames()">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="SafetyPattern BlockParameterValue" preconditionExpression="aql:self.eContainer() == sourceView.eContainer().target" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@nodeMappings[name='SafetyPatternApplication']/@borderedNodeMappings[name='Safety%20Pattern%20BlockParameterDefinition']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" targetFinderExpression="aql:self.value" sourceFinderExpression="aql:self.parameter" domainClass="parameter::BlockParameterValue" useDomainElement="true">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="10" labelExpression="«Block»">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
	<edgeMappings name="SafetyPattern BlockTypeParameterValue" preconditionExpression="aql:self.eContainer() == sourceView.eContainer().target" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@nodeMappings[name='SafetyPatternApplication']/@borderedNodeMappings[name='Safety%20Pattern%20BlockTypeParameterDefinition']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='ErrorHandler']" targetFinderExpression="aql:self.value" sourceFinderExpression="aql:self.parameter" domainClass="parameter::BlockTypeParameterValue" useDomainElement="true">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="10" labelExpression="«BlockType»">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="SafetyPattern PortParameterValue" preconditionExpression="aql:self.eContainer() == sourceView.eContainer().target" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@nodeMappings[name='SafetyPatternApplication']/@borderedNodeMappings[name='Safety%20Pattern%20PortParameterDefinition']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorDataPort']" targetFinderExpression="aql:self.value" sourceFinderExpression="aql:self.parameter" domainClass="parameter::PortParameterValue" useDomainElement="true">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="10" labelExpression="«Port»">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="SafetyPattern ConnectionParameterValue" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@nodeMappings[name='SafetyPatternApplication']/@borderedNodeMappings[name='Safety%20Pattern%20ConnectionParameterDefinition']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='AssemblyControlFlowConnection'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='AssemblyDataFlowConnection'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='DelegateControlFlowConnection'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='DelegateDataFlowConnection']" targetFinderExpression="aql:self.value" sourceFinderExpression="aql:self.parameter" domainClass="parameter::ConnectionParameterValue" useDomainElement="true">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="10" labelExpression="«Connection»">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Block UseRelationship" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" targetFinderExpression="aql:self.uses" sourceFinderExpression="aql:self.source" domainClass="block::UseRelationship" useDomainElement="true">
          <style lineStyle="dot" targetArrow="InputFillClosedArrow" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <centerLabelStyleDescription labelSize="10" labelExpression="«uses»">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Block DeployRelationship" sourceMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" targetMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" targetFinderExpression="aql:self.deployedAt" sourceFinderExpression="aql:self.source" domainClass="block::DeployRelationship" useDomainElement="true">
          <style lineStyle="dot" targetArrow="InputFillClosedArrow" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <centerLabelStyleDescription labelSize="10" labelExpression="«deployedAt»">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="BlockType" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='AbstractBlockType']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BlockType']" createElements="false" domainClass="block::BlockType">
          <borderedNodeMappings name="DataFlowPort" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Port']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Port%20Label']" semanticCandidatesExpression="aql:self.getDataFlowPorts()" domainClass="block::DataFlowPort">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::IN">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::OUT">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::INOUT">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="ErrorDataPort" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Port']" semanticCandidatesExpression="aql:self.eContents()" domainClass="errorHandling::ErrorDataPort">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(errorHandling::ErrorDataPort) and self.direction == block::PortDirection::IN">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(errorHandling::ErrorDataPort) and self.direction == block::PortDirection::OUT">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.eContainer().oclIsKindOf(errorHandling::ErrorHandler)">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="ErrorControlFlowPort" semanticCandidatesExpression="aql:self.eContents()" domainClass="errorHandling::ErrorControlFlowPort">
            <style xsi:type="style:DotDescription" showIcon="false" sizeComputationExpression="0" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::IN">
              <style xsi:type="style:DotDescription" showIcon="false" sizeComputationExpression="0" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::OUT">
              <style xsi:type="style:DotDescription" showIcon="false" sizeComputationExpression="0" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::INOUT">
              <style xsi:type="style:DotDescription" showIcon="false" sizeComputationExpression="0" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <subContainerMappings name="Block (Container Node)" preconditionExpression="aql:self.oclIsKindOf(block::Block) and not (self.type.oclIsTypeOf(controlFlow::DecisionNode) or self.type.oclIsTypeOf(controlFlow::JoinNode) or self.type.oclIsTypeOf(controlFlow::ForkNode) or self.type.oclIsTypeOf(controlFlow::MergeNode) or self.type.oclIsKindOf(controlFlow::SignalNode))" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Block%20(Container%20Node)']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Block']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Edit%20Block%20Type']" documentation="Regualar Block nodes. Those nodes show assigned parameter values in a listing." domainClass="block::Block" childrenPresentation="List">
            <borderedNodeMappings name="DataFlowPort on Container Block" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Port']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Port%20Label']" semanticCandidatesExpression="aql:self.type.getDataFlowPorts()" domainClass="block::DataFlowPort">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::IN">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::OUT">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::INOUT">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <borderedNodeMappings name="ErrorDataPort on Container Block" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Port']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Port%20Label']" semanticCandidatesExpression="aql:self.type.eContents()" domainClass="errorHandling::ErrorDataPort">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(errorHandling::ErrorDataPort) and self.direction == block::PortDirection::IN">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.oclIsKindOf(errorHandling::ErrorDataPort) and self.direction == block::PortDirection::OUT">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.eContainer().oclIsKindOf(errorHandling::ErrorHandler)">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <borderedNodeMappings name="ErrorControlFlowPort on Container Block" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Port']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Port%20Label']" semanticCandidatesExpression="aql:self.type.eContents()" domainClass="errorHandling::ErrorControlFlowPort">
              <style xsi:type="style:DotDescription" showIcon="false" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="0" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::IN">
                <style xsi:type="style:DotDescription" showIcon="false" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="0" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::OUT">
                <style xsi:type="style:DotDescription" showIcon="false" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="0" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::INOUT">
                <style xsi:type="style:DotDescription" showIcon="false" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="0" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <subNodeMappings name="Assigned PrimitiveParameterValue" semanticCandidatesExpression="service:getAssignedParameterValues()" domainClass="parameter::PrimitiveParameterValue">
              <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:self.parameter.name + ': ' + self.value" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:self.name + ':' + self.type.name" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png" labelAlignment="LEFT" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(block::BlockType)">
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:self.getStereotypeNames() + self.name + ':' + self.type.name" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png" tooltipExpression="service:getStereotypesAndParameters()" backgroundStyle="Liquid">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(errorHandling::ErrorHandler)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" borderLineStyle="dash" labelSize="12" labelExpression="aql:self.getStereotypeNames() + self.name + ':' + self.type.name" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png" tooltipExpression="service:getStereotypesAndParameters()" backgroundStyle="Liquid">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <subContainerMappings name="Block (Controlflow Node)" preconditionExpression="aql:self.oclIsKindOf(block::Block) and (self.type.oclIsTypeOf(controlFlow::DecisionNode) or self.type.oclIsTypeOf(controlFlow::JoinNode) or self.type.oclIsTypeOf(controlFlow::ForkNode) or self.type.oclIsTypeOf(controlFlow::MergeNode) or self.type.oclIsTypeOf(controlFlow::ReceiveSignalNode) or self.type.oclIsTypeOf(controlFlow::SendSignalNode))" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Block%20(Controlflow%20Node)']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Block']" semanticCandidatesExpression="feature:eAllContents" documentation="Nodes from the control flow package. This avoids the listing of parameter values in the visual nodes" domainClass="block::Block">
            <borderedNodeMappings name="DataFlowPort on Block" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Port']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Port%20Label']" semanticCandidatesExpression="aql:self.type.getDataFlowPorts()" domainClass="block::DataFlowPort">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::IN">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::OUT">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.direction == block::PortDirection::INOUT">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <borderedNodeMappings name="ErrorDataPort on Block" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Port']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Port%20Label']" semanticCandidatesExpression="aql:self.type.eContents()" domainClass="errorHandling::ErrorDataPort">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.eContainer().oclIsKindOf(errorHandling::ErrorHandler)">
                <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' :: ' + self.type.name" tooltipExpression="service:getStereotypesAndParameters()" sizeComputationExpression="1">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:self.name + ':' + self.type.name" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(controlFlow::JoinNode)">
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" showIcon="false" tooltipExpression="service:getStereotypesAndParameters()" widthComputationExpression="20" heightComputationExpression="1" backgroundStyle="Liquid">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(controlFlow::DecisionNode)">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" arcWidth="1" arcHeight="1" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/rhomb-outline.svg">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(controlFlow::ForkNode)">
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" showIcon="false" tooltipExpression="service:getStereotypesAndParameters()" widthComputationExpression="20" heightComputationExpression="1" backgroundStyle="Liquid">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(controlFlow::MergeNode)">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" arcWidth="1" arcHeight="1" roundedCorner="true" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/rhomb-outline.svg">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(controlFlow::ReceiveSignalNode)">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" arcWidth="1" arcHeight="1" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/ReceivedEventNode.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(controlFlow::SendSignalNode)">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" arcWidth="1" arcHeight="1" workspacePath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/SendEventNode.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:self.getStereotypeNames()+ '  ' + self.name" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick.png" tooltipExpression="service:getStereotypesAndParameters()" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <containerMappings name="ErrorHandler" deletionDescription="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='AbstractBlockType']" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='BlockType']" createElements="false" domainClass="errorHandling::ErrorHandler" reusedBorderedNodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorDataPort']" reusedContainerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="2" borderLineStyle="dash" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick.png" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <toolSections name="Block - Block Type - Port">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Block Type" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::BlockType" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'BlockType ' + self.eContainer().eContents(block::BlockType)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Untyped Block" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Untyped Block ' + self.eContainer().eContents(block::Block)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Block" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Block ' + self.eContainer().eContents(block::Block)->size()"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::BlockType" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'BlockType ' + self.eContainer().eContents(block::BlockType)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="Port">
            <tools xsi:type="tool:NodeCreationDescription" name="DataPort" precondition="aql: not (self.type.oclIsKindOf(controlFlow::SignalNode) or self.type.oclIsTypeOf(controlFlow::ForkNode))" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/porticons/datePortUNSET.png">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="PortType Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation/>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="inDataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="DataPort (In)" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/porticons/dataPortIN.png">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation/>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="inDataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Type Selection">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="DataPort (Out)" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/porticons/dataPortOUT.png">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation/>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="inDataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="DataPort (InOut)" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='DataFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Container%20Block'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']/@borderedNodeMappings[name='DataFlowPort%20on%20Block']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/porticons/dataPortINOUT.png">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::INOUT"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="dataFlowPorts">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation/>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::INOUT"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DataFlowPort" referenceName="inDataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.0"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::INOUT"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Assembly Connection" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='AssemblyDataFlowConnection']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getConnectionContainer(sourceView)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::AssemblyDataFlowConnection" referenceName="dataFlowConnections">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="aql:sourceView.eContainer().target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="aql:targetView.eContainer().target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Delegate Connection" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='DelegateDataFlowConnection']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:sourceView.eContainer().target.oclIsKindOf(block::BlockType)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.eContainer().target">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DelegateDataFlowConnection" referenceName="dataFlowConnections">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="aql:targetView.eContainer().target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetView.eContainer().target.oclIsKindOf(block::BlockType)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:targetView.eContainer().target">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DelegateDataFlowConnection" referenceName="dataFlowConnections">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="aql:sourceView.eContainer().target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Block UseRelationship" precondition="service:isValidUseRelationship(preSource,preTarget)" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='Block%20UseRelationship']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getBlockRelashionshipContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::UseRelationship" referenceName="blockRelationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="uses" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Block DeployRelationship" precondition="service:isValidDeployRelationship(preSource,preTarget)" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='Block%20DeployRelationship']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getBlockRelashionshipContainer()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="block::DeployRelationship" referenceName="blockRelationships">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="deployedAt" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Error Handling">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="ErrorHandler Type" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='ErrorHandler']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="errorHandling::ErrorHandler" referenceName="content">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ErrorHandler ' + self.eContainer().eContents(errorHandling::ErrorHandler)->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Error Block" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Error Block ' + self.eContainer().eContents(block::Block)->size()"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="errorHandling::ErrorHandler" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ErrorHandler ' + self.eContainer().eContents(errorHandling::ErrorHandler)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="DataErrorPort" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorDataPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorDataPort%20on%20Container%20Block']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/porticons/dataErrorPort.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.type.oclIsKindOf(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="errorHandling::ErrorDataPort" referenceName="dataFlowPorts">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ErrorDataPort ' + self.eContainer().eContents(errorHandling::ErrorDataPort)->size()"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.1"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="errorHandling::ErrorDataPort" referenceName="dataFlowPorts">
                    <subModelOperations xsi:type="tool_1:ChangeContext">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation/>
                        </buttons>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ErrorDataPort ' + self.eContainer().eContents(errorHandling::ErrorDataPort)->size()"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="ErrorControlFlowPort" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@borderedNodeMappings[name='ErrorControlFlowPort'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']/@borderedNodeMappings[name='ErrorControlFlowPort%20on%20Container%20Block']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/porticons/ContolFloErrorPort.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="errorHandling::ErrorControlFlowPort" referenceName="controlFlowPorts">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation/>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'errorControlFlowPort  ' + (self.eContainer().eContents(errorHandling::ErrorControlFlowPort)->size() -1)"/>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.3"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="errorHandling::ErrorControlFlowPort" referenceName="controlFlowPorts">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Port Creation">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation/>
                        </buttons>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.name.size() = 0">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'errorControlFlowPort  ' + (self.eContainer().eContents(errorHandling::ErrorControlFlowPort)->size() -1)"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" labelExpression="Port Creation" semanticCandidateExpression="var:self" preconditionExpression="aql:true" extends="//@extensions.0/@categories.2/@pages.3"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Control Flow">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Join Node" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/joinNodeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Join Node"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::JoinNode" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Join Node ' + self.eContainer().eContents(controlFlow::JoinNode)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Fork Node" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/forkNodeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Fork Node"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ForkNode" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ForkNode ' + self.eContainer().eContents(controlFlow::ForkNode)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Decision Node" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/decitionNodeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="if"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::DecisionNode" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'DecisionNode ' + self.eContainer().eContents(controlFlow::DecisionNode)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Merge Node" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/mergeNodeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="M"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::MergeNode" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'MergeNode ' + self.eContainer().eContents(controlFlow::MergeNode)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Send Node" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/sendNodeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Send Node"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::SendSignalNode" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'SendNode ' + self.eContainer().eContents(controlFlow::SendSignalNode)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Receive Node" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/others/receivedNodeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="block::Block" referenceName="blocks">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="Receive Node"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ReceiveSignalNode" referenceName="content" variableName="typeInstance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ReceiveNode ' + self.eContainer().eContents(controlFlow::ReceiveSignalNode)->size()"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:typeInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Assembly Connection" precondition="service:isValidAssemblyControlFlowConnectionEnd(preTarget)" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='AssemblyControlFlowConnection']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png" connectionStartPrecondition="service:isValidAssemblyControlFlowConnectionStart(preSource)">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.eContainer().target.eContainer()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::AssemblyControlFlowConnection" referenceName="controlFlowConnections">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="sourcePort">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="sourcePort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                            <subModelOperations xsi:type="tool_1:Switch">
                              <cases conditionExpression="aql:self.outControlFlowPortTrue == null">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPortTrue" variableName="sourcePort">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </cases>
                              <cases conditionExpression="aql:self.outControlFlowPortTrue != null">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPortFalse" variableName="sourcePort">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </cases>
                              <default/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::JoinNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::JoinNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::ForkNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::ForkNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPorts" variableName="sourcePort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::MergeNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::MergeNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::SendSignalNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::SendSignalNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::ReceiveSignalNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::ReceiveSignalNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="aql:sourceView.eContainer().target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="aql:source.oclAsType(errorHandling::ErrorControlFlowPort)"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="targetPort">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="targetPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPort" variableName="targetPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::JoinNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::JoinNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPorts" variableName="targetPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::ForkNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::ForkNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPort" variableName="targetPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::MergeNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::MergeNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPorts" variableName="targetPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::SendSignalNode)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::SendSignalNode)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPort" variableName="targetPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="aql:targetView.eContainer().target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="aql:target.oclAsType(errorHandling::ErrorControlFlowPort)"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.eContainer()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::AssemblyControlFlowConnection" referenceName="controlFlowConnections">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                        <subModelOperations xsi:type="tool_1:Switch">
                          <cases conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="sourcePort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="sourcePort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                              <subModelOperations xsi:type="tool_1:Switch">
                                <cases conditionExpression="aql:self.outControlFlowPortTrue == null">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPortTrue" variableName="sourcePort">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </cases>
                                <cases conditionExpression="aql:self.outControlFlowPortTrue != null">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPortFalse" variableName="sourcePort">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </cases>
                                <default/>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::JoinNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::JoinNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::ForkNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::ForkNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPorts" variableName="sourcePort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::MergeNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::MergeNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::SendSignalNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::SendSignalNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::ReceiveSignalNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::ReceiveSignalNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="outControlFlowPort" variableName="sourcePort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceBlock" valueExpression="aql:sourceView.eContainer().target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="aql:source.oclAsType(errorHandling::ErrorControlFlowPort)"/>
                            </subModelOperations>
                          </cases>
                          <default/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool_1:Switch">
                          <cases conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="targetPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="targetPort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::DecisionNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPort" variableName="targetPort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::JoinNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::JoinNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPorts" variableName="targetPort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::ForkNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::ForkNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPort" variableName="targetPort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::MergeNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::MergeNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPorts" variableName="targetPort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(block::Block) and self.type.oclIsKindOf(controlFlow::SendSignalNode)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::SendSignalNode)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="inControlFlowPort" variableName="targetPort">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:targetPort"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="var:target"/>
                            </subModelOperations>
                          </cases>
                          <cases conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationBlock" valueExpression="aql:targetView.eContainer().target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="aql:target.oclAsType(errorHandling::ErrorControlFlowPort)"/>
                            </subModelOperations>
                          </cases>
                          <default/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Delegate Connection" precondition="service:isValidDelegateControlFlowConnectionEnd(preSourceView,preTargetView)" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='DelegateControlFlowConnection']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png" connectionStartPrecondition="service:isValidDelegateControlFlowConnectionStart(preSourceView)">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:source.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getTopBlockTypeContainer(sourceView)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::DelegateControlFlowConnection" referenceName="controlFlowConnections" variableName="delegateControlflowConnection">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:sourceView.eContainer().target.oclIsKindOf(block::Block)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="aql:sourceView.eContainer().target"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="destinationPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:destinationPort"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="var:target"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="destinationPort">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:destinationPort"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:target"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetView.eContainer().target.oclIsKindOf(block::Block)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="aql:targetView.eContainer().target"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:source.oclIsKindOf(block::BlockType)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="sourcePort">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::DelegateControlFlowConnection" referenceName="controlFlowConnections" variableName="delegateControlflowConnection">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::Block)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="destinationPort">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:destinationPort"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="var:target"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:target"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetView.eContainer().target.oclIsKindOf(block::Block)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="aql:targetView.eContainer().target"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:source.oclIsKindOf(block::Block)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::DelegateControlFlowConnection" referenceName="controlFlowConnections" variableName="delegateControlflowConnection">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(block::BlockType)">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="sourcePort">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + ':: outport'"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::OUT"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sourcePort" valueExpression="var:sourcePort"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="innerBlock" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(block::BlockType)">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="controlFlow::ControlFlowPort" referenceName="controlFlowPorts" variableName="destinationPort">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name + ':: inport'"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="aql:block::PortDirection::IN"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:destinationPort"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(errorHandling::ErrorControlFlowPort)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:delegateControlflowConnection">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="destinationPort" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Direct Edit">
          <ownedTools xsi:type="tool:DirectEditLabel" name="BlockType">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Block" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="Edit Block Type" mappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Change BlockType Name">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext"/>
                  </initialOperation>
                </buttons>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext"/>
                  </initialOperation>
                </buttons>
                <page name="Default Page" domainClass="block::Block" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Edit%20Block%20Type']/@initialOperation/@firstModelOperations/@groups.0"/>
                <groups name="Default Group" labelExpression="BlockType" domainClass="block::Block" semanticCandidateExpression="aql:self" preconditionExpression="aql:self.type.oclIsKindOf(block::BlockType)">
                  <controls xsi:type="properties:TextDescription" name="Name Text Field" labelExpression="Name" helpExpression="The name of the Block Type" valueExpression="aql:self.oclAsType(block::Block).type.name">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                      </firstModelOperations>
                    </initialOperation>
                  </controls>
                </groups>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Safety Measure" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0.trim()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Port Label" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0.trim()"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="DragAndDrop">
          <ownedTools xsi:type="tool:ContainerDropDescription" name="BlockType from treeview" precondition="aql:self.oclIsTypeOf(block::BlockType)" forceRefresh="true" mappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(block::BlockType)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']" containerViewExpression="var:newContainerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SafetyMeasure from treeview" precondition="aql:self.oclIsTypeOf(safetyPattern::SafetyPatternApplication)" mappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@nodeMappings[name='SafetyPatternApplication']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(safetyPattern::SafetyPatternApplication)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@nodeMappings[name='SafetyPatternApplication']" containerViewExpression="var:newContainerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="ErrorHandler from treeview" precondition="aql:self.oclIsTypeOf(errorHandling::ErrorHandler)" forceRefresh="true" mappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='ErrorHandler']" dragSource="PROJECT_EXPLORER">
             <oldContainer name="oldSemanticContainer"/>
             <newContainer name="newSemanticContainer"/>
             <element name="element"/>
             <newViewContainer name="newContainerView"/>
             <initialOperation>
               <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                 <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(errorHandling::ErrorHandler)">
                   <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='ErrorHandler']" containerViewExpression="var:newContainerView"/>
                 </subModelOperations>
               </firstModelOperations>
             </initialOperation>
           </ownedTools>
        </toolSections>
        <toolSections name="Safety Pattern">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Safety Pattern Application" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@nodeMappings[name='SafetyPatternApplication']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/safeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="safetyPattern::SafetyPatternApplication" referenceName="content">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create Safety Pattern Application">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation/>
                      </buttons>
                      <page name="Default Page" labelExpression="Create a new Safety Pattern Application" domainClass="safetyPattern::SafetyPatternApplication" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='Safety%20Pattern%20Application']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                      <groups name="SafetyPatternApplicationCreation" labelExpression="Safety Pattern Application" domainClass="safetyPattern::SafetyPatternApplication" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:TextDescription" name="SafetyPatternApplicationName" labelExpression="Name" isEnabledExpression="aql:true" valueExpression="feature:name">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                        <controls xsi:type="properties:ListDescription" name="SafetyPatternTypeList" labelExpression="Available Safety Pattern Types" valueExpression="aql:self.getAllSafetyPattern()" displayExpression="aql:value.name">
                          <onClickOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:selection->first()"/>
                              <subModelOperations xsi:type="tool_1:For" expression="aql:selection->first().trafoTypeParameterDefinitions">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::TransformationTypeValue" referenceName="trafoTypeArguments" variableName="ppValue">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="aql:i"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool_1:For" expression="aql:selection->first().domainTypeParameterDefinitions">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::DomainTypeParameterValue" referenceName="domainTypeArguments" variableName="ppValue">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="aql:i"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </firstModelOperations>
                          </onClickOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Block Argument Assignment" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='SafetyPattern%20BlockParameterValue']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector_add.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.eContainer().target.oclAsType(safetyPattern::SafetyPatternApplication)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::BlockParameterValue" referenceName="blockParameterArguments">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="BlockType Argument Assignment" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='SafetyPattern%20BlockTypeParameterValue']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector_add.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.eContainer().target.oclAsType(safetyPattern::SafetyPatternApplication)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::BlockTypeParameterValue" referenceName="blockTypeParameterArguments">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Port Argument Assignment" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='SafetyPattern%20PortParameterValue']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector_add.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.eContainer().target.oclAsType(safetyPattern::SafetyPatternApplication)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::PortParameterValue" referenceName="portParameterArguments">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetView.eContainer().target.oclIsKindOf(block::Block)">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="contextBlock" valueExpression="aql:targetView.eContainer().target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Connection Argument Assignment" edgeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@edgeMappings[name='SafetyPattern%20ConnectionParameterValue']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector_add.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.eContainer().target.oclAsType(safetyPattern::SafetyPatternApplication)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::ConnectionParameterValue" referenceName="connectionParameterArguments">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="parameter" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Custom Delete">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Block (Container Node)">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:self.getDeleteDependencies()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Block (Controlflow Node)">
            <element name="element">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="type" computationExpression="aql:self.type"/>
            </element>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:self.getDeleteDependencies()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" documentation="Avoid the deletion of PortArguments which are graphical added as children" name="SafetyMeasure">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:RemoveElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="AbstractBlockType">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:self.getDeleteDependencies()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Port">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:self.getDeleteDependencies()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Stereotype">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:self.getDeleteDependencies()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="ParameterDefinition">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:self.getDeleteDependencies()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Controlflow Connection">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:self.getDeleteDependencies()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20Safety%20Measure%20Type'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='BlockType%20from%20treeview']" name="Safety Pattern Diagram" domainClass="common::Model" enablePopupBars="true">
      <metamodel href="https://www.universalsafetyformat.org/block#/"/>
      <metamodel href="https://www.universalsafetyformat.org/common#/"/>
      <metamodel href="https://www.universalsafetyformat.org/controlFlow#/"/>
      <metamodel href="https://www.universalsafetyformat.org/portTemplate#/"/>
      <metamodel href="https://www.universalsafetyformat.org/errorHandling#/"/>
      <metamodel href="https://www.universalsafetyformat.org/parameter#/"/>
      <metamodel href="https://www.universalsafetyformat.org/safetyPattern#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.box" label="Box Layout" description="Algorithm for packing of unconnected boxes, i.e. graphs without edges."/>
      <defaultLayer name="Default">
        <containerMappings name="Safety Pattern" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Safety%20Pattern%20Label%20Edit']" createElements="false" domainClass="safetyPattern::SafetyPattern" childrenPresentation="HorizontalStack">
          <subContainerMappings name="SafetyPattern Model Parameters" semanticCandidatesExpression="aql:self" domainClass="safetyPattern::SafetyPattern" childrenPresentation="List">
            <subNodeMappings name="Safety Pattern Block Parameter" semanticCandidatesExpression="feature:blockParameters" domainClass="parameter::BlockParameterDefinition">
              <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:self.getSafetyPatternParameterName()" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="Safety Pattern BlockType Parameter" semanticCandidatesExpression="feature:blockTypeParameters" domainClass="parameter::BlockTypeParameterDefinition">
              <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:self.getSafetyPatternParameterName()" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="Safety Pattern Port Parameter" semanticCandidatesExpression="feature:portParameters" domainClass="parameter::PortParameterDefinition">
              <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:self.getSafetyPatternParameterName()" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/bullet_picture.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="Safety Pattern Connection Parameter" semanticCandidatesExpression="feature:connectionParameters" domainClass="parameter::ConnectionParameterDefinition">
              <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:self.getSafetyPatternParameterName()" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="Safety Pattern Domain Type Parameter" semanticCandidatesExpression="feature:domainTypeParameterDefinitions" domainClass="parameter::DomainTypeParameterDefinition">
              <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:self.getSafetyPatternParameterName()" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="Model Parameter" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white_edit.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="SafetyPattern Primitive Parameters" semanticCandidatesExpression="aql:self" domainClass="safetyPattern::SafetyPattern" childrenPresentation="List">
            <subNodeMappings name="Safety Pattern Transformation Type Parameter" labelDirectEdit="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Parameter%20Edition']" semanticCandidatesExpression="feature:trafoTypeParameterDefinitions" domainClass="parameter::TransformationTypeParameterDefinition">
              <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:self.getSafetyPatternParameterName()" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white.png" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="Primitive Parameter" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white_copy.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/safeIcon.png" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
          </style>
        </containerMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="BlockType in SafetyPattern" synchronizationLock="true" domainClass="block::BlockType" reusedContainerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Container%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']/@subContainerMappings[name='Block%20(Controlflow%20Node)'] //@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='ErrorHandler']" importedMapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Block%20Diagram']/@defaultLayer/@containerMappings[name='BlockType']"/>
        <toolSections name="Safety Pattern">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Safety Pattern" containerMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/safeIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getModelRoot()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="safetyPattern::SafetyPattern" referenceName="content">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Safety Pattern ' + self.eContainer().eContents(safetyPattern::SafetyPattern)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Transformation Type Parameter" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']/@subContainerMappings[name='SafetyPattern%20Primitive%20Parameters']/@subNodeMappings[name='Safety%20Pattern%20Transformation%20Type%20Parameter']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white_add.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::TransformationTypeParameterDefinition" referenceName="trafoTypeParameterDefinitions">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Parameter ' + self.eContainer().oclAsType(safetyPattern::SafetyPattern).trafoTypeParameterDefinitions->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Block Parameter" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']/@subContainerMappings[name='SafetyPattern%20Model%20Parameters']/@subNodeMappings[name='Safety%20Pattern%20Block%20Parameter']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick_link.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::BlockParameterDefinition" referenceName="blockParameters">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Block%20Parameter']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="Parameter Name" labelExpression="Parameter Name" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:ListDescription" name="Block Types" labelExpression="Available BlockTypes" isEnabledExpression="aql:true" valueExpression="aql:self.getModelRoot().eContents(block::BlockType)" displayExpression="aql:value.oclAsType(block::BlockType).name">
                        <onClickOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="constrainingBlockType" valueExpression="aql:selection->first()"/>
                          </firstModelOperations>
                        </onClickOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="BlockType Parameter" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']/@subContainerMappings[name='SafetyPattern%20Model%20Parameters']/@subNodeMappings[name='Safety%20Pattern%20BlockType%20Parameter']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/brick.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::BlockTypeParameterDefinition" referenceName="blockTypeParameters">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='BlockType%20Parameter']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="Parameter Name" labelExpression="Parameter Name" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Port Parameter" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']/@subContainerMappings[name='SafetyPattern%20Model%20Parameters']/@subNodeMappings[name='Safety%20Pattern%20Port%20Parameter']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/bullet_picture.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::PortParameterDefinition" referenceName="portParameters">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Port%20Parameter']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="Parameter Name" labelExpression="Parameter Name" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:ListDescription" name="Port Types" labelExpression="Available Types" isEnabledExpression="aql:true" valueExpression="aql:self.getModelRoot().eContents(common::DomainType)" displayExpression="aql:value.oclAsType(common::DomainType).name">
                        <onClickOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="constrainingPortType" valueExpression="aql:selection->first()"/>
                          </firstModelOperations>
                        </onClickOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Connection Parameter" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']/@subContainerMappings[name='SafetyPattern%20Model%20Parameters']/@subNodeMappings[name='Safety%20Pattern%20Connection%20Parameter']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/vector.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::ConnectionParameterDefinition" referenceName="connectionParameters">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Connection%20Parameter']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="Parameter Name" labelExpression="Parameter Name" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Domain Type Parameter" nodeMappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']/@subContainerMappings[name='SafetyPattern%20Model%20Parameters']/@subNodeMappings[name='Safety%20Pattern%20Domain%20Type%20Parameter']" iconPath="/org.safe4i.usf.safetyModeller.visualisation/icons/silk_icons_v013/icons/page_white_add.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="parameter::DomainTypeParameterDefinition" referenceName="domainTypeParameterDefinitions">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Domain%20Type%20Parameter']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="Domain Type Name" labelExpression="Domain Type Name" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Direct Edit">
          <ownedTools xsi:type="tool:DirectEditLabel" name="Safety Pattern Label Edit">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Parameter Edition">
            <mask mask="{0}={1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0.trim()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(parameter::TransformationTypeParameterDefinition)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="defaultValue" valueExpression="aql:arg1.trim()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="Drop Safety Measure Type" precondition="aql:self.oclIsTypeOf(safetyPattern::SafetyPattern)" mappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(safetyPattern::SafetyPattern)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='Safety%20Pattern']" containerViewExpression="var:newContainerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="DragAndDrop">
          <ownedTools xsi:type="tool:ContainerDropDescription" name="BlockType from treeview" precondition="aql:self.oclIsTypeOf(block::BlockType)" forceRefresh="true" mappings="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='BlockType%20in%20SafetyPattern']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(block::BlockType)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='USF']/@ownedRepresentations[name='Safety%20Pattern%20Diagram']/@defaultLayer/@containerMappings[name='BlockType%20in%20SafetyPattern']" containerViewExpression="var:newContainerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.safe4i.usf.visualisation.services.USFModelServices"/>
    <ownedJavaExtensions qualifiedClassName="org.safe4i.usf.visualisation.services.USFUIServices"/>
    <ownedJavaExtensions qualifiedClassName="org.safe4i.usf.visualisation.services.USFDeleteDependencyService"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Property">
    <metamodels href="https://www.universalsafetyformat.org/block#/"/>
    <metamodels href="https://www.universalsafetyformat.org/common#/"/>
    <metamodels href="https://www.universalsafetyformat.org/controlFlow#/"/>
    <metamodels href="https://www.universalsafetyformat.org/errorHandling#/"/>
    <metamodels href="https://www.universalsafetyformat.org/parameter#/"/>
    <metamodels href="https://www.universalsafetyformat.org/portTemplate#/"/>
    <metamodels href="https://www.universalsafetyformat.org/safetypattern#/"/>
    <categories name="Category">
      <pages name="Page" labelExpression="aql:'This need to be revmoved later'" preconditionExpression="aql:false" groups="//@extensions.0/@categories.1/@groups.0">
        <extends href="platform:/plugin/org.eclipse.sirius.properties.defaultrules/model/properties.odesign#//@extensions.0/@categories.0/@pages.0"/>
      </pages>
      <pages name="Main Properties" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()">
        <groups href="platform:/plugin/org.eclipse.sirius.properties.defaultrules/model/properties.odesign#//@extensions.0/@categories.0/@groups.0"/>
        <groups href="#//@extensions.0/@categories.1/@groups.0"/>
        <groups href="#//@extensions.0/@categories.0/@groups.0"/>
      </pages>
      <groups name="Stereotypes and Parameters" labelExpression="Stereotypes and Parameters" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="service:isObjectOfInterest()">
        <controls xsi:type="properties:CustomDescription" name="org.safe4i.usf.core.model.ui.ext.widget.streotypesAndParameter" labelExpression="Sample Table" isEnabledExpression="aql:true"/>
      </groups>
    </categories>
    <categories name="Decision Node Properties">
      <groups name="DecisionNode Properties Group" labelExpression="Decision Node" domainClass="block::Block" preconditionExpression="aql:self.type.oclIsKindOf(controlFlow::DecisionNode)">
        <controls xsi:type="properties:TextDescription" name="DecisionNode Condition" labelExpression="Condition" valueExpression="aql:self.type.oclAsType(controlFlow::DecisionNode).condition">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type.oclAsType(controlFlow::DecisionNode)">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="condition" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
    </categories>
    <categories name="PortCreationDialogs">
      <pages name="DataFlowPortPage" labelExpression="Port Creation" domainClass="block::DataFlowPort" semanticCandidateExpression="var:self" preconditionExpression="aql:false" groups="//@extensions.0/@categories.2/@groups.0"/>
      <pages name="ErrorDataPortPage" labelExpression="Port Creation" domainClass="errorHandling::ErrorDataPort" semanticCandidateExpression="var:self" preconditionExpression="aql:false" groups="//@extensions.0/@categories.2/@groups.1"/>
      <pages name="ControlFlowPortPage" labelExpression="Port Creation" domainClass="controlFlow::ControlFlowPort" semanticCandidateExpression="var:self" preconditionExpression="aql:false" groups="//@extensions.0/@categories.2/@groups.2"/>
      <pages name="ErrorControlFlowPortPage" labelExpression="Port Creation" domainClass="errorHandling::ErrorControlFlowPort" semanticCandidateExpression="var:self" preconditionExpression="aql:false" groups="//@extensions.0/@categories.2/@groups.3"/>
      <groups name="DataFlowPortCreation" labelExpression="Port Creation" domainClass="block::DataFlowPort" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="portName" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="The name of the port" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:'port ' + self.eContainer().eContents(block::DataFlowPort)->size()">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="portType" labelExpression="Type" helpExpression="The data type of the port" isEnabledExpression="aql:true" valueExpression="feature:type" candidatesExpression="service:getAllDomainTypes()" candidateDisplayExpression="aql:candidate.oclAsType(common::NamedElement).name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ErrorDataPortCreation" labelExpression="Port Creation" domainClass="errorHandling::ErrorDataPort" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="portName" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="The name of the port" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:'ErrorDataPort ' + self.eContainer().eContents(errorHandling::ErrorDataPort)->size()">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="portType" labelExpression="Type" helpExpression="The data type of the port" isEnabledExpression="aql:true" valueExpression="feature:type" candidatesExpression="service:getAllDomainTypes()" candidateDisplayExpression="aql:candidate.oclAsType(common::NamedElement).name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ControlFlowPortCreation" labelExpression="Port Creation" domainClass="controlFlow::ControlFlowPort" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="portName" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="The name of the port" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:'ControFlowPort ' + (self.eContainer().eContents(controlFlow::ControlFlowPort)->size()-1)">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ErrorControlFlowPortCreation" labelExpression="Port Creation" domainClass="errorHandling::ErrorControlFlowPort" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="portName" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="The name of the port" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:'errorControlFlowPort  ' + (self.eContainer().eContents(errorHandling::ErrorControlFlowPort)->size() -1)">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
